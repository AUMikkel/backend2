services:
  # SQL Database service (SQL Server)
  sql3:
    container_name: sql3
    image: mcr.microsoft.com/mssql/server:2019-latest
    user: root
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: AU650889?
    ports:
      - "1433:1433"  # Expose SQL server port
    healthcheck:

      test:

        [

          "CMD-SHELL",

          "/opt/mssql-tools18/bin/sqlcmd -U sa -P AU650889? -C -Q 'SELECT 1'  -b -o /dev/null"

        ]

      interval: 60s

      timeout: 30s

      retries: 5

      start_period: 300s

      start_interval: 10s
    networks:
      - backend-network
    volumes:
      - sql-data6:/var/opt/mssql/data

  # MongoDB service
  mongoex3:
    image: mongo:latest
    container_name: mongoex3
    ports:
      - "27017:27017"  # Expose MongoDB port
    networks:
      - backend-network
    volumes:
      - mongo-data:/data/db
      - ./mongo-init-scripts:/docker-entrypoint-initdb.d

  # .NET API service
  dotnet-api:
    build:
      context: .  # Path to your project directory
      dockerfile: Dockerfile  # Path to your Dockerfile
    container_name: dotnet-api
    ports:
      - "8080:8080"  # Align with applicationUrl in launchsettings
    networks:
      - backend-network
    depends_on:
      sql3:
        condition: service_healthy  # Wait for SQL Server to start
      mongoex3:
        condition: service_started  # Wait for MongoDB to start
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
      - DatabaseName=Assignment3
      - DefaultConnection=Server=sql3;Initial Catalog={DatabaseName};User ID=sa;Password=AU650889?;TrustServerCertificate=True
      - MongoDBSettings__ConnectionString=mongodb://mongoex3:27017/assign3
      - MongoDBSettings__DatabaseName=assign3

networks:
  backend-network:
    driver: bridge

volumes:
  sql-data6:
    name: sqlvolume6
  mongo-data:
